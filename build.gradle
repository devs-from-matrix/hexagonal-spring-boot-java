import org.springframework.boot.gradle.plugin.SpringBootPlugin

buildscript {
  repositories {
    mavenCentral()
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }

  ext {
    springBootGradlePluginVersion = '3.1.3'
    springDependencyManagementVersion = '1.1.3'
    archUnitVersion = '3.0.0'
    junitVersion = '5.10.0'
    springDocVersion = '2.2.0'
    openApiGeneratorVersion = '6.3.0'
  }

  dependencies {
    classpath "io.spring.gradle:dependency-management-plugin:$springDependencyManagementVersion"
    classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootGradlePluginVersion"
    classpath "com.societegenerale.commons:arch-unit-gradle-plugin:$archUnitVersion"
    classpath "org.openapitools:openapi-generator-gradle-plugin:$openApiGeneratorVersion"
    classpath group: 'org.sonarsource.scanner.gradle', name: 'sonarqube-gradle-plugin', version: '2.8'
  }
}

allprojects {
  group = 'packagename'

  repositories {
    mavenCentral()
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  apply plugin: 'base'
}

subprojects {
  apply plugin: 'java'
  apply plugin: 'io.spring.dependency-management'
  apply plugin: 'java-library'

  java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
  }

  tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
  }

  dependencies {
    compileOnly "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"

    testImplementation(platform("org.junit:junit-bom:$junitVersion"))
    testImplementation "org.junit.jupiter:junit-jupiter"
    testImplementation "org.junit.platform:junit-platform-suite"
    testImplementation "org.assertj:assertj-core"
    testImplementation "org.mockito:mockito-core"
    testImplementation "org.mockito:mockito-junit-jupiter"
  }

  dependencyManagement {
    imports {
      mavenBom SpringBootPlugin.BOM_COORDINATES
    }
  }

  test {
    useJUnitPlatform()
  }
}
