<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>packagename</groupId>
  <artifactId>artifactName-parent</artifactId>
  <packaging>pom</packaging>
  <version>1.0-SNAPSHOT</version>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.version>21</java.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <junit-jupiter.version>5.11.2</junit-jupiter.version>
    <spring-boot.version>3.3.4</spring-boot.version>
    <cucumber.version>7.20.0</cucumber.version>
    <springdoc-openapi-starter.version>2.6.0</springdoc-openapi-starter.version>
    <pre-liquibase.version>1.5.1</pre-liquibase.version>
    <otj-pg-embedded.version>1.1.0</otj-pg-embedded.version>
    <snakeyaml.version>2.3</snakeyaml.version>
    <h2.version>2.3.232</h2.version>
    <!-- plugins -->
    <cukedoctor-maven-plugin.version>3.9.0</cukedoctor-maven-plugin.version>
    <maven-surefire-plugin.version>3.5.1</maven-surefire-plugin.version>
    <maven-enforcer-plugin>3.5.0</maven-enforcer-plugin>
    <arch-unit-maven-plugin.version>4.0.2</arch-unit-maven-plugin.version>
    <jacoco-maven-plugin.version>0.8.12</jacoco-maven-plugin.version>
    <maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
    <jib-maven.plugin.version>3.4.3</jib-maven.plugin.version>
    <git-code-format-maven-plugin.version>5.3</git-code-format-maven-plugin.version>
    <githook-maven-plugin.version>1.0.5</githook-maven-plugin.version>
    <pitest-maven-plugin.version>1.17.0</pitest-maven-plugin.version>
    <pitest-junit5-plugin.version>1.2.1</pitest-junit5-plugin.version>
  </properties>
  <modules>
    <module>domain</module>
    <module>domain-api</module>
    <module>rest-adapter</module>
    <module>jpa-adapter</module>
    <module>bootstrap</module>
    <module>acceptance-test</module>
  </modules>
  <dependencyManagement>
    <dependencies>
      <!-- Following exclusions are made since there were security vulnerabilities -->
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-web</artifactId>
        <version>${spring-boot.version}</version>
      </dependency>
      <dependency>
        <groupId>org.yaml</groupId>
        <artifactId>snakeyaml</artifactId>
        <version>${snakeyaml.version}</version>
      </dependency>
      <dependency>
        <groupId>com.h2database</groupId>
        <artifactId>h2</artifactId>
        <scope>test</scope>
        <version>${h2.version}</version>
      </dependency>
      <!-- Project module dependency -->
      <dependency>
        <groupId>packagename</groupId>
        <artifactId>domain</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>packagename</groupId>
        <artifactId>domain-api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>packagename</groupId>
        <artifactId>rest-adapter</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>packagename</groupId>
        <artifactId>jpa-adapter</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>packagename</groupId>
        <artifactId>bootstrap</artifactId>
        <version>${project.version}</version>
      </dependency>
      <!-- Frameworks & Libraries -->
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${junit-jupiter.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.opentable.components</groupId>
        <artifactId>otj-pg-embedded</artifactId>
        <version>${otj-pg-embedded.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>net.lbruun.springboot</groupId>
        <artifactId>preliquibase-spring-boot-starter</artifactId>
        <version>${pre-liquibase.version}</version>
      </dependency>
      <dependency>
        <groupId>io.github.classgraph</groupId>
        <artifactId>classgraph</artifactId>
        <version>${classgraph.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <!-- lombok -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <scope>provided</scope>
    </dependency>
    <!-- JUnit 5 dependencies -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-suite</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- mockito dependencies -->
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <finalName>${project.artifactId}</finalName>
    <directory>target</directory>
    <outputDirectory>target/classes</outputDirectory>
    <testOutputDirectory>target/test-classes</testOutputDirectory>
    <sourceDirectory>src/main/java</sourceDirectory>
    <testSourceDirectory>src/test/java</testSourceDirectory>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <source>${java.version}</source> <!-- 1.8,1.9,1.10,11,12,13 -->
          <target>${java.version}</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <testFailureIgnore>false</testFailureIgnore>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>${maven-enforcer-plugin}</version>
        <configuration>
          <rules>
            <dependencyConvergence/>
            <requireReleaseDeps>
              <failWhenParentIsSnapshot>false</failWhenParentIsSnapshot>
              <excludes>
                <exclude>${project.groupId}:*</exclude>
              </excludes>
            </requireReleaseDeps>
          </rules>
          <fail>true</fail>
        </configuration>
        <executions>
          <execution>
            <id>enforce-versions</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <phase>validate</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.cosium.code</groupId>
        <artifactId>git-code-format-maven-plugin</artifactId>
        <version>${git-code-format-maven-plugin.version}</version>
        <executions>
          <!-- On commit, format the modified java files -->
          <execution>
            <id>install-formatter-hook</id>
            <goals>
              <goal>install-hooks</goal>
            </goals>
          </execution>
          <!-- On Maven verify phase, fail if any file
          (including unmodified) is badly formatted -->
          <execution>
            <id>validate-code-format</id>
            <goals>
              <goal>validate-code-format</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <!-- Enable https://github.com/google/google-java-format -->
          <dependency>
            <groupId>com.cosium.code</groupId>
            <artifactId>google-java-format</artifactId>
            <version>${git-code-format-maven-plugin.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>io.github.phillipuniverse</groupId>
        <artifactId>githook-maven-plugin</artifactId>
        <version>${githook-maven-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>install</goal>
            </goals>
            <configuration>
              <hooks>
                <pre-commit>
                  echo "Validating..."
                  exec mvn test
                  echo "Formatting code..."
                  exec mvn git-code-format:format-code
                  echo "Validating format..."
                  exec mvn git-code-format:validate-code-format
                </pre-commit>
              </hooks>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>${spring-boot.version}</version>
        </plugin>
        <plugin>
          <groupId>com.societegenerale.commons</groupId>
          <artifactId>arch-unit-maven-plugin</artifactId>
          <version>${arch-unit-maven-plugin.version}</version>
          <executions>
            <execution>
              <phase>test</phase>
              <goals>
                <goal>arch-test</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>com.google.cloud.tools</groupId>
          <artifactId>jib-maven-plugin</artifactId>
          <version>${jib-maven.plugin.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
  <profiles>
    <profile>
      <id>mutation-test</id>
      <activation>
        <property><name>mutation.tests</name></property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.pitest</groupId>
            <artifactId>pitest-maven</artifactId>
            <version>${pitest-maven-plugin.version}</version>
            <executions>
              <execution>
                <phase>test</phase>
                <goals>
                  <goal>mutationCoverage</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <avoidCallsTo>
                <avoidCallsTo>org.slf4j</avoidCallsTo>
              </avoidCallsTo>
              <exportLineCoverage>true</exportLineCoverage>
              <outputFormats>
                <value>XML</value>
                <value>HTML</value>
              </outputFormats>
            </configuration>
            <dependencies>
              <dependency>
                <groupId>org.pitest</groupId>
                <artifactId>pitest-junit5-plugin</artifactId>
                <version>${pitest-junit5-plugin.version}</version>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
